
replicaCount: 1

image:
  repository: docker.io/root-ali/velero-notification
  pullPolicy: IfNotPresent
  tag: "0.0.1"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: "velero-notification"

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "velero-notification"

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
   capabilities:
     drop:
     - ALL
   readOnlyRootFilesystem: true
   runAsNonRoot: true
   runAsUser: 1000

service:
  type: ClusterIP
  port: 9090

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []

defaultEnv:
  velero_reporter_mattermost_url: ""
  velero_reporter_mattermost_token: ""
  velero_reporter_http_host: 0.0.0.0
  velero_reporter_http_port: 9090
  log_level: debug

resources:
   limits:
     cpu: 100m
     memory: 128Mi
   requests:
     cpu: 100m
     memory: 128Mi

livenessProbe:
  httpGet:
    path: /healthy
    port: http
readinessProbe:
  httpGet:
    path: /ready
    port: http

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80

volumes: []
volumeMounts: []
nodeSelector: {}
tolerations: []
affinity: {}
